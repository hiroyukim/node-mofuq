#!/usr/bin/env node
'use strict';

var yaml    = require('js-yaml'),
    fs      = require('fs'),
    sprintf = require('sprintf').sprintf,
    program = require('commander'),
    log4js  = require('log4js'),
    logger  = log4js.getLogger();

program
    .usage('<filepath>')
    .option('-p, --params [params]', 'Set paramname',String)
    .parse(process.argv);

var filepath = program.args[0];
var params   = program.params;

if(!filepath) {
    program.help();
}

try {
    var data = yaml.safeLoad(fs.readFileSync(filepath, 'utf8'));
} catch(e) {
    logger.error(e);
    program.help();
}

if(data.length == 0 ) {
    logger.error("No data.");
    process.exit();
}

function create_progress_bar(progress) {
    progress = progress / 10;
    var array = [];
    for( var i=0; i < 10; i++ ) {
        array.push(
            ( i < progress ) ? '#' : '_'
        );
    }
    return '[' + array.join('') + ']';
}

var sum_hour = 0;
var sum_progress = 0;
for( var i in data ) {
    var outputs = [
        create_progress_bar(data[i].progress),
        sprintf("(%03d%%)",data[i].progress),
        sprintf("[%02dh]",data[i]['hour'] || 0),
        data[i].name
    ];

    if( params ) {
        var append_params = params.split(',');
        for( var key in append_params ) {
            outputs.push( '[' + ( data[i][append_params[key]] || 'undefined') + ']')
        }
    }

    console.log(outputs.join("\t"));
    sum_hour += data[i]['hour'] || 0;
    sum_progress += data[i].progress;
}

console.log("tasks: " + data.length );
console.log("hour: " + sum_hour );
console.log(sprintf("progress: %d%%", parseInt( ( sum_progress / ( data.length * 100 ) ) * 100 ) ) );
